1. Основное свойство CSS Grid и отличие от Flexbox
Основное свойство - `display: grid`. Grid создает двумерные макеты (строки и столбцы), тогда как Flexbox работает в одном измерении. Grid позволяет одновременно управлять расположением по горизонтали и вертикали.

2. Разница между grid-template-columns и grid-auto-columns
`grid-template-columns` явно задает размеры и количество столбцов. `grid-auto-columns` определяет размер автоматически создаваемых столбцов, когда элементов больше чем явно заданных столбцов.

3. Функции repeat(), minmax() и auto-fit
- `repeat()`: повторяет шаблон (например, `repeat(3, 1fr)` - 3 колонки по 1fr)
- `minmax()`: задает минимальный и максимальный размер (`minmax(200px, 1fr)`)
- `auto-fit`: автоматически создает столбцы чтобы заполнить доступное пространство

4. Именованные grid-области
Позволяют давать имена областям сетки через `grid-template-areas`. Преимущества: наглядность, легкое изменение макета, простое позиционирование элементов.

5. Система нумерации grid-линий
Сетка имеет линии от 1 до n+1. `grid-column: 1 / 3` размещает элемент от линии 1 до 3. Можно использовать `span` для указания количества занимаемых ячеек.

6. grid-gap (gap) vs margins
`gap` создает равномерные промежутки между всеми элементами автоматически. Не требует обнуления крайних отступов и проще в поддержке чем margins.

7. justify-items и align-items
`justify-items` выравнивает элементы по горизонтали внутри их ячеек. `align-items` выравнивает по вертикали. Работают на уровне отдельных grid-ячеек.

8. auto-fill vs auto-fit
`auto-fill` создает максимально возможное количество столбцов, даже пустых. `auto-fit` растягивает существующие столбцы чтобы заполнить все пространство.

9. grid-template-areas и правила именования
Позволяет визуально описывать макет. Правила: имена в кавычках, точки для пустых ячеек, одинаковое количество областей в каждой строке.

10. Преимущества CSS Grid
Создание сложных двумерных макетов, точное позиционирование, контроль по обеим осям одновременно, адаптивность без медиа-запросов, чистая семантика в CSS.
